#!/bin/bash

TFBUILD_CONFIG=Release

export TFPACKAGELOCALOFF=1
export TFPACKAGECONDA=1
if [[ $(uname) == Darwin ]]; then
  export MACOSX_DEPLOYMENT_TARGET=${TFOSX_SYSROOT}
fi

mkdir -p -v tf_build_conda
cd tf_build_conda
TFBUILDDIR=$(pwd)
mkdir -p -v libroadrunner-deps
mkdir -p -v roadrunner
mkdir -p -v antimony
mkdir -p -v tissue-forge

# Build libRoadRunner dependencies

cd ${TFBUILDDIR}/libroadrunner-deps

declare -a CMAKE_CONFIG_ARGS_RRD

CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_BUILD_TYPE:STRING=${TFBUILD_CONFIG})
CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_PREFIX_PATH:PATH=${PREFIX})
CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_FIND_ROOT_PATH:PATH=${PREFIX})
CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_INSTALL_PREFIX:PATH=${TFBUILDDIR}/libroadrunner-deps/install)
CMAKE_CONFIG_ARGS_RRD+=(-DUSE_UNIVERSAL_BINARIES:BOOL=OFF)
CMAKE_CONFIG_ARGS_RRD+=(-DWITH_ZLIB:BOOL=OFF)

if [[ $(uname) == Darwin ]]; then
  CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_OSX_SYSROOT:PATH=${CONDA_BUILD_SYSROOT})

  if [[ ! -z ${TF_OSXARM64+z} ]]; then
    if [ ${TF_OSXARM64} -eq 1 ]; then
      CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_APPLE_SILICON_PROCESSOR:STRING=arm64)
      CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_OSX_ARCHITECTURES:STRING=arm64)
    else
      CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_APPLE_SILICON_PROCESSOR:STRING=x86_64)
      CMAKE_CONFIG_ARGS_RRD+=(-DCMAKE_OSX_ARCHITECTURES:STRING=x86_64)
    fi
  fi
fi

cmake -G "Ninja" \
      "${CMAKE_CONFIG_ARGS_RRD[@]}" \
      "${SRC_DIR}/extern/libroadrunner-deps"

cmake --build . --config ${TFBUILD_CONFIG} --target install

# Build libRoadRunner

cd ${TFBUILDDIR}/roadrunner

declare -a CMAKE_CONFIG_ARGS_RR

CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_BUILD_TYPE:STRING=${TFBUILD_CONFIG})
CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_PREFIX_PATH:PATH=${PREFIX})
CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_FIND_ROOT_PATH:PATH=${PREFIX})
CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_INSTALL_PREFIX:PATH=${PREFIX}/lib/TissueForge/roadrunner)
CMAKE_CONFIG_ARGS_RR+=(-DRR_DEPENDENCIES_INSTALL_PREFIX:PATH=${TFBUILDDIR}/libroadrunner-deps/install)
CMAKE_CONFIG_ARGS_RR+=(-DLLVM_INSTALL_PREFIX:PATH=${PREFIX})

if [[ $(uname) == Darwin ]]; then
  CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_OSX_SYSROOT:PATH=${CONDA_BUILD_SYSROOT})

  if [[ ! -z ${TF_OSXARM64+z} ]]; then
    if [ ${TF_OSXARM64} -eq 1 ]; then
      CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_APPLE_SILICON_PROCESSOR:STRING=arm64)
      CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_OSX_ARCHITECTURES:STRING=arm64)
    else
      CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_APPLE_SILICON_PROCESSOR:STRING=x86_64)
      CMAKE_CONFIG_ARGS_RR+=(-DCMAKE_OSX_ARCHITECTURES:STRING=x86_64)
    fi
  fi
fi

cmake -G "Ninja" \
      "${CMAKE_CONFIG_ARGS_RR[@]}" \
      "${SRC_DIR}/extern/roadrunner"

cmake --build . --config ${TFBUILD_CONFIG} --target install

# Build libAntimony

cd ${TFBUILDDIR}/antimony

declare -a CMAKE_CONFIG_ARGS_ANT

CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_BUILD_TYPE:STRING=${TFBUILD_CONFIG})
CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_PREFIX_PATH:PATH=${PREFIX})
CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_FIND_ROOT_PATH:PATH=${PREFIX})
CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_INSTALL_PREFIX:PATH=${PREFIX}/lib/TissueForge/antimony)
CMAKE_CONFIG_ARGS_ANT+=(-DLIBSBML_INSTALL_DIR:PATH=${PREFIX}/lib/TissueForge/roadrunner)
CMAKE_CONFIG_ARGS_ANT+=(-DUSE_UNIVERSAL_BINARIES:BOOL=OFF)
CMAKE_CONFIG_ARGS_ANT+=(-DWITH_QTANTIMONY:BOOL=OFF)

if [[ $(uname) == Darwin ]]; then
  CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_OSX_SYSROOT:PATH=${CONDA_BUILD_SYSROOT})

  if [[ ! -z ${TF_OSXARM64+z} ]]; then
    if [ ${TF_OSXARM64} -eq 1 ]; then
      CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_APPLE_SILICON_PROCESSOR:STRING=arm64)
      CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_OSX_ARCHITECTURES:STRING=arm64)
    else
      CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_APPLE_SILICON_PROCESSOR:STRING=x86_64)
      CMAKE_CONFIG_ARGS_ANT+=(-DCMAKE_OSX_ARCHITECTURES:STRING=x86_64)
    fi
  fi
fi

cmake -G "Ninja" \
      "${CMAKE_CONFIG_ARGS_ANT[@]}" \
      "${SRC_DIR}/extern/antimony"

cmake --build . --config ${TFBUILD_CONFIG} --target install

# Build Tissue Forge

cd ${TFBUILDDIR}/tissue-forge

declare -a CMAKE_CONFIG_ARGS

CMAKE_CONFIG_ARGS+=(-DCMAKE_BUILD_TYPE:STRING=${TFBUILD_CONFIG})
CMAKE_CONFIG_ARGS+=(-DCMAKE_PREFIX_PATH:PATH=${PREFIX})
CMAKE_CONFIG_ARGS+=(-DCMAKE_FIND_ROOT_PATH:PATH=${PREFIX})
CMAKE_CONFIG_ARGS+=(-DCMAKE_INSTALL_PREFIX:PATH=${PREFIX})
CMAKE_CONFIG_ARGS+=(-DPython_EXECUTABLE:PATH=${PREFIX}/bin/python)
CMAKE_CONFIG_ARGS+=(-DLIBXML_INCLUDE_DIR:PATH=${PREFIX}/include/libxml2)

if [[ $(uname) == Darwin ]]; then
  CMAKE_CONFIG_ARGS+=(-DCMAKE_OSX_SYSROOT:PATH=${CONDA_BUILD_SYSROOT})

  if [[ ! -z ${TF_OSXARM64+z} ]]; then
    if [ ${TF_OSXARM64} -eq 1 ]; then
      CMAKE_CONFIG_ARGS+=(-DCMAKE_APPLE_SILICON_PROCESSOR:STRING=arm64)
      CMAKE_CONFIG_ARGS+=(-DCMAKE_OSX_ARCHITECTURES:STRING=arm64)
      CMAKE_CONFIG_ARGS+=(-DTF_ENABLE_AVX:BOOL=OFF)
      CMAKE_CONFIG_ARGS+=(-DTF_ENABLE_SSE4:BOOL=OFF)
    else
      CMAKE_CONFIG_ARGS+=(-DCMAKE_APPLE_SILICON_PROCESSOR:STRING=x86_64)
      CMAKE_CONFIG_ARGS+=(-DCMAKE_OSX_ARCHITECTURES:STRING=x86_64)
    fi
  fi

else
  CMAKE_CONFIG_ARGS+=(-DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=lld)

  export CC=${CONDA_PREFIX}/bin/clang
  export CXX=${CONDA_PREFIX}/bin/clang++

  # Helping corrade rc find the right libstdc++
  export LD_LIBRARY_PATH=${CONDA_PREFIX}/lib:${LD_LIBRARY_PATH}
fi

cmake -G "Ninja" \
      "${CMAKE_CONFIG_ARGS[@]}" \
      "${SRC_DIR}"

cmake --build . --config ${TFBUILD_CONFIG} --target install
